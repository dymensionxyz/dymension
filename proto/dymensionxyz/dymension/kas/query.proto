syntax = "proto3";
package dymensionxyz.dymension.kas;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "dymensionxyz/dymension/kas/d.proto";

option go_package = "github.com/dymensionxyz/dymension/v3/x/kas/types";

service Query {

  // check if a withdrawal was processed yet or not
  rpc WithdrawalStatus(QueryWithdrawalStatusRequest)
      returns (QueryWithdrawalStatusResponse) {
    option (google.api.http).get =
        "/dymensionxyz/dymension/kas/withdrawal_status";
  }

  // get the current outpoint which must be spent in all newly signed
  // transactions
  rpc Outpoint(QueryOutpointRequest) returns (QueryOutpointResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension/kas/outpoint";
  }
}

message QueryWithdrawalStatusRequest {
  repeated WithdrawalID withdrawal_id = 1;
}

message QueryWithdrawalStatusResponse {
  repeated WithdrawalStatus status = 1 [ (gogoproto.nullable) = false ];
  TransactionOutpoint outpoint = 2 [ (gogoproto.nullable) = false ];
}

message QueryOutpointRequest {}

message QueryOutpointResponse {
  TransactionOutpoint outpoint = 1 [ (gogoproto.nullable) = false ];
}