syntax = "proto3";
package dymensionxyz.dymension.iro;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/dymensionxyz/dymension/v3/x/iro/types";

// Params is a module parameters.
message Params {
  string taker_fee = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  // The fee for creating a plan in rollapp tokens (e.g 1000000000000000000 for
  // 1Token fee) must be > 1 The cost in dym is charged from the creator
  string creation_fee = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  // Minimum plan duration
  // when creating a plan, the plan duration should be greater than or equal to
  // this value plan duration is from the start time to the pre-launch time
  google.protobuf.Duration min_plan_duration = 3
      [ (gogoproto.stdduration) = true, (gogoproto.nullable) = false ];

  // The minimum time after settlement when the incentives distribution will
  // start
  google.protobuf.Duration incentives_min_start_time_after_settlement = 4
      [ (gogoproto.stdduration) = true, (gogoproto.nullable) = false ];

  // The minimum number of epochs over which the incentives will be paid
  uint64 incentives_min_num_epochs_paid_over = 5;

  // The minimum part of the raised liquidity that must be used for pool
  // bootstrapping the other part goes to the founder
  string min_liquidity_part = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}
