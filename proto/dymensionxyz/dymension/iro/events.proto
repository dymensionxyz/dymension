syntax = "proto3";
package dymensionxyz.dymension.iro;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "dymensionxyz/dymension/iro/iro.proto";
import "dymensionxyz/dymension/iro/params.proto";

option go_package = "github.com/dymensionxyz/dymension/v3/x/iro/types";

message EventUpdateParams {
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  Params new_params = 2 [ (gogoproto.nullable) = false ];
  Params old_params = 3 [ (gogoproto.nullable) = false ];
}

message EventNewIROPlan {
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
  bool standard_launch = 4;
}

message EventBuy {
  string buyer = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
  cosmos.base.v1beta1.Coin amount = 4 [ (gogoproto.nullable) = false ];
  cosmos.base.v1beta1.Coin cost = 5 [ (gogoproto.nullable) = false ];
  cosmos.base.v1beta1.Coin taker_fee = 6 [ (gogoproto.nullable) = false ];

  string closing_price = 7 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message EventSell {
  string seller = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
  cosmos.base.v1beta1.Coin amount = 4 [ (gogoproto.nullable) = false ];
  cosmos.base.v1beta1.Coin revenue = 5 [ (gogoproto.nullable) = false ];
  cosmos.base.v1beta1.Coin taker_fee = 6 [ (gogoproto.nullable) = false ];

  string closing_price = 7 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message EventClaim {
  string claimer = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
  cosmos.base.v1beta1.Coin claim = 4 [ (gogoproto.nullable) = false ];
}

message EventClaimVested {
  string claimer = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
  cosmos.base.v1beta1.Coin claim = 4 [ (gogoproto.nullable) = false ];

  // unvested is the amount of tokens that are still vesting.
  cosmos.base.v1beta1.Coin unvested = 5 [ (gogoproto.nullable) = false ];
}

message EventSettle {
  string plan_id = 1;
  string rollapp_id = 2;
  string IBC_denom = 3;
  uint64 pool_id = 4;
  uint64 gauge_id = 5;
  string vesting_amount = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message EventTradingEnabled {
  string plan_id = 1;
  string rollapp_id = 2;
}

message EventGraduation {
  string plan_id = 1;
  string rollapp_id = 2;
  uint64 pool_id = 3;
}