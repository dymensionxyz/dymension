syntax = "proto3";
package dymensionxyz.dymension.iro;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";
import "dymensionxyz/dymension/iro/iro.proto";

option go_package = "github.com/dymensionxyz/dymension/v3/x/iro/types";

message EventUpdateParams {
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  Params new_params = 2 [ (gogoproto.nullable) = false ];
  Params old_params = 3 [ (gogoproto.nullable) = false ];
}

message EventNewIROPlan {
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
}

message EventBuy {
  string buyer = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
  string amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string cost = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string taker_fee = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string closing_price = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  string denom = 8;
}

message EventSell {
  string seller = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
  string amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string revenue = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string taker_fee = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string closing_price = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  string denom = 8;
}

message EventClaim {
  string claimer = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string plan_id = 2;
  string rollapp_id = 3;
  string amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string denom = 5;
}

message EventSettle {
  string plan_id = 1;
  string rollapp_id = 2;
  string IBC_denom = 3;
  uint64 pool_id = 4;
  uint64 gauge_id = 5;
}