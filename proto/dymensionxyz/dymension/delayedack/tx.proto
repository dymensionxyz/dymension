syntax = "proto3";
package dymensionxyz.dymension.delayedack;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "dymensionxyz/dymension/common/rollapp_packet.proto";
import "dymensionxyz/dymension/delayedack/params.proto";

option go_package = "github.com/dymensionxyz/dymension/v3/x/delayedack/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams is used for updating module params.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // FinalizePacket finalizes a singe packet.
  rpc FinalizePacket(MsgFinalizePacket) returns (MsgFinalizePacketResponse);

  rpc FinalizePacketByPacketKey(MsgFinalizePacketByPacketKey)
      returns (MsgFinalizePacketByPacketKeyResponse);
}

// MsgUpdateParams allows to update module params.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // Authority is the address that controls the module.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // NewParams should be fully populated.
  Params params = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateParamsResponse {}

// MsgFinalizePacket finalizes a single packet.
message MsgFinalizePacket {
  option (cosmos.msg.v1.signer) = "sender";

  // Sender is the signer of the message.
  string sender = 1;
  // RollappID is the ID of the rollapp.
  string rollapp_id = 2;
  // PacketProofHeight is a height at which the proof was retrieved.
  uint64 packet_proof_height = 3;
  // PacketType is a type of the packet. Eg, RECV, ACK, TIMEOUT.
  dymensionxyz.dymension.common.RollappPacket.Type packet_type = 4;
  // PacketSrcChannel identifies the channel end on the sending chain.
  string packet_src_channel = 5;
  // PacketSequence is a sequence number of the packet.
  uint64 packet_sequence = 6;
}

message MsgFinalizePacketResponse {}

// MsgFinalizePacketByPacketKey finalizes a single packet by the packet key.
message MsgFinalizePacketByPacketKey {
  option (cosmos.msg.v1.signer) = "sender";

  // Sender is the signer of the message.
  string sender = 1;
  // PacketKey is a key of the packet.
  string packet_key = 2;
}

message MsgFinalizePacketByPacketKeyResponse {}
