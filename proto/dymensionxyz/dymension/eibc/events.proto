syntax = "proto3";
package dymensionxyz.dymension.eibc;

import "gogoproto/gogo.proto";

import "dymensionxyz/dymension/common/status.proto";
import "dymensionxyz/dymension/eibc/demand_order.proto";

option go_package = "github.com/dymensionxyz/dymension/v3/x/eibc/types";

// EventDemandOrderCreated is emitted when the demand order is created.
message EventDemandOrderCreated {
  // order_id is the unique identifier of the demand order.
  string order_id = 1;
  // price is the price of the demand order.
  string price = 2;
  // fee is the fee of the demand order.
  string fee = 3;
  // Deprecated: orders cannot be created and fulfilled at the same time
  // is_fulfilled is the flag indicating whether the order is fulfilled.
  bool is_fulfilled = 4 [deprecated = true];
  // packet_status is the status of the packet.
  string packet_status = 5;
  // packet_key is the base64 encoded key of the packet.
  string packet_key = 6;
  // rollapp_id is the id of the rollapp.
  string rollapp_id = 7;
  // recipient is the address of the recipient.
  string recipient = 8;
  // packet_type is the type of the packet.
  string packet_type = 9;
  // proof_height is the height of the block when order was created.
  uint64 proof_height = 10;
  // amount is the amount of the IBC transfer.
  string amount = 11;
}

// EventDemandOrderPacketStatusUpdate is emitted when the status of the related packet is updated.
message EventDemandOrderPacketStatusUpdated {
  // order_id is the unique identifier of the demand order.
  string order_id = 1;
  // new_packet_status is the status of the packet after the update.
  dymensionxyz.dymension.common.Status new_packet_status = 2;
  // is_fulfilled is the flag indicating whether the order is fulfilled.
  bool is_fulfilled = 3;
}

// EventDemandOrderFeeUpdate is emitted when the fee of the demand order is updated.
message EventDemandOrderFeeUpdated {
  // order_id is the unique identifier of the demand order.
  string order_id = 1;
  // new_fee is the new fee amount set in the order.
  string new_fee = 2;
  // price is the price of the demand order.
  string price = 3;
  // packet_status is the status of the packet.
  string packet_status = 4;
  // rollapp_id is the id of the rollapp.
  string rollapp_id = 5;
  // proof_height is the height of the block when order was created.
  uint64 proof_height = 6;
  // amount is the amount of the IBC transfer.
  string amount = 7;
}

// EventDemandOrderFulfilled is emitted when the demand order is fulfilled.
message EventDemandOrderFulfilled {
  // order_id is the unique identifier of the demand order.
  string order_id = 1;
  // price is the price of the demand order.
  string price = 2;
  // fee is the fee of the demand order.
  string fee = 3;
  // is_fulfilled is the flag indicating whether the order is fulfilled.
  bool is_fulfilled = 4;
  // packet_status is the status of the packet.
  string packet_status = 5;
  // fulfiller is the address of the fulfiller.
  string fulfiller = 9;
  // packet_type is the type of the packet.
  string packet_type = 10;
}

// EventDemandOrderFulfilledAuthorized is emitted when the demand order is fulfilled from an authorization.
message EventDemandOrderFulfilledAuthorized {
  // order_id is the unique identifier of the demand order.
  string order_id = 1;
  // price is the price of the demand order.
  string price = 2;
  // fee is the fee of the demand order.
  string fee = 3;
  // is_fulfilled is the flag indicating whether the order is fulfilled.
  bool is_fulfilled = 4;
  // packet_status is the status of the packet.
  string packet_status = 5;
  // fulfiller is the address of the fulfiller.
  string fulfiller = 9;
  // packet_type is the type of the packet.
  string packet_type = 10;
  // creation_height is the height of the block when order was created.
  uint64 creation_height = 11;
  // lp_address is the address of the LP.
  string lp_address = 12;
  // operator_address is the address of the operator.
  string operator_address = 13;
  // operator_fee is the fee of the operator.
  string operator_fee = 14;
}

message EventDemandOrderDeleted {
  // order_id is the unique identifier of the demand order.
  string order_id = 1;
  // packet_key is the base64 encoded key of the packet.
  string packet_key = 2;
  // packet_status is the status of the packet.
  string packet_status = 3;
  // rollapp_id is the id of the rollapp.
  string rollapp_id = 4;
  // packet_type is the type of the packet.
  string packet_type = 5;
}
