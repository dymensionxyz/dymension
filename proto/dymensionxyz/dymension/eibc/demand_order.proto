syntax = "proto3";
package dymensionxyz.dymension.eibc;

import "cosmos/base/v1beta1/coin.proto";
import "dymensionxyz/dymension/common/rollapp_packet.proto";
import "dymensionxyz/dymension/common/status.proto";
import "dymensionxyz/dymension/transfer/completion_hook.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/dymensionxyz/dymension/v3/x/eibc/types";

message DemandOrder {
  // id is a hash of the form generated by GetRollappPacketKey,
  // e.g
  // status/rollappid/packetProofHeight/packetDestinationChannel-PacketSequence
  // which guarantees uniqueness
  string id = 1;
  // tracking_packet_key is the key of the packet that is being tracked.
  // This key can change depends on the packet status.
  string tracking_packet_key = 2;
  // price is the amount that the fulfiller sends to original eibc transfer
  // recipient
  repeated cosmos.base.v1beta1.Coin price = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // fee is the effective profit made by the fulfiller because they pay price
  // and receive fee + price
  repeated cosmos.base.v1beta1.Coin fee = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string recipient = 5;

  // Deprecated: use DemandOrder.IsFulfilled method instead.
  // Only used for backwards compatibility.
  bool deprecated_is_fulfilled = 6 [deprecated = true];

  dymensionxyz.dymension.common.Status tracking_packet_status = 8;
  string rollapp_id = 9;
  common.RollappPacket.Type type = 10;
  // fulfiller_address is the bech32-encoded address of the account which
  // fulfilled the order.
  string fulfiller_address = 11;
  // creation_height is the height of the block on the hub when order was
  // created.
  uint64 creation_height = 12;
  // an optional hook which uses the funds when the order is fulfilled
  transfer.CompletionHookCall completion_hook_call = 13; // TODO: need to write a migration for this?
}
