syntax = "proto3";
package dymensionxyz.dymension.sequencer;

option go_package = "github.com/dymensionxyz/dymension/v3/x/sequencer/types";

import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/msg/v1/msg.proto";

import "dymensionxyz/dymension/sequencer/metadata.proto";

// Msg defines the Msg service.
service Msg {
  // CreateSequencer defines a method for creating a new sequencer.
  rpc CreateSequencer (MsgCreateSequencer) returns (MsgCreateSequencerResponse);
  // UpdateSequencerInformation defines a method for updating the sequencer's metadata.
  rpc UpdateSequencerInformation (MsgUpdateSequencerInformation) returns (MsgUpdateSequencerInformationResponse);
  // Unbond defines a method for removing coins from sequencer's bond
  rpc Unbond (MsgUnbond) returns (MsgUnbondResponse);

  // IncreaseBond defines a method for increasing a sequencer's bond amount
  rpc IncreaseBond (MsgIncreaseBond) returns (MsgIncreaseBondResponse);
  
  // DecreaseBond defines a method for decreasing the bond of a sequencer.
  rpc DecreaseBond (MsgDecreaseBond) returns (MsgDecreaseBondResponse);
}

message MsgCreateSequencer {
  option (cosmos.msg.v1.signer) = "creator";
  // creator is the bech32-encoded address of the sequencer account which is the account that the message was sent from.
  string creator = 1;
  // pubkey is the public key of the sequencers' dymint client, as a Protobuf Any.
  google.protobuf.Any dymintPubKey = 2 [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
  // rollapp_id defines the rollapp to which the sequencer belongs.
  string rollapp_id = 3;
  // metadata defines the extra information for the sequencer.
  SequencerMetadata metadata = 4 [(gogoproto.nullable) = false];
  // entry bond for the sequencer.
  cosmos.base.v1beta1.Coin bond = 5 [(gogoproto.nullable) = false];
}

message MsgCreateSequencerResponse {}

message MsgUpdateSequencerInformation {
  option (cosmos.msg.v1.signer) = "creator";
  // creator is the bech32-encoded address of the sequencer account which is the account that the message was sent from.
  string creator = 1;
  // rollapp_id defines the rollapp to which the sequencer belongs.
  string rollapp_id = 2;
  // metadata defines the extra information for the sequencer.
  SequencerMetadata metadata = 3 [(gogoproto.nullable) = false];
}

message MsgUpdateSequencerInformationResponse {}

// MsgUnbond defines a SDK message for performing an undelegation from a
// bond and a sequencer.
message MsgUnbond {
  option (cosmos.msg.v1.signer) = "creator";
  option      (gogoproto.equal) =     false;
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgUnbondResponse defines the Msg/Unbond response type.
message MsgUnbondResponse {
  // completion_time defines the time at which the unbonding will be completed.
  // If unbonding the proposer, the completion time is the time at which the notice period will be completed.
  oneof completion_time {
    // unbonding_completion_time is the time at which the unbonding will be completed.
    google.protobuf.Timestamp unbonding_completion_time = 1 [ (gogoproto.stdtime) = true];
    // notice_period_completion_time is the time at which the notice period will be completed.
    google.protobuf.Timestamp notice_period_completion_time = 2 [ (gogoproto.stdtime) = true];
  }
}

// MsgIncreaseBond defines a SDK message for increasing the bond amount of a sequencer.
message MsgIncreaseBond {
  option (cosmos.msg.v1.signer) = "creator";
  // creator is the bech32-encoded address of the sequencer account which is the account that the message was sent from.
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // add_amount is the amount of coins to be added to the sequencer's bond.
  cosmos.base.v1beta1.Coin add_amount = 2 [(gogoproto.nullable) = false];
}

// MsgIncreaseBondResponse defines the Msg/IncreaseBond response type.
message MsgIncreaseBondResponse {}

// MsgDecreaseBond defines a SDK message for decreasing the bond of a sequencer.
message MsgDecreaseBond {
  option (cosmos.msg.v1.signer) = "creator";
  // creator is the bech32-encoded address of the sequencer account which is the account that the message was sent from.
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // decrease_amount is the amount of coins to decrease the bond by.
  cosmos.base.v1beta1.Coin decrease_amount = 2 [(gogoproto.nullable) = false];
}

// MsgDecreaseBondResponse defines the Msg/DecreaseBond response type.
message MsgDecreaseBondResponse {
  google.protobuf.Timestamp completion_time = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}
