syntax = "proto3";
package dymensionxyz.dymension.streamer;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "dymensionxyz/dymension/streamer/streamer.proto";

option go_package = "github.com/dymensionxyz/dymension/v3/x/streamer/types";

message EventEndBlock {
  uint64 iterations = 1;
  uint64 max_iterations = 2;
  // Distributed is the total amount of coins that have been distributed
  repeated cosmos.base.v1beta1.Coin distributed = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message EventEpochEnd {
  uint64 iterations = 1;
  // Distributed is the total amount of coins that have been distributed
  repeated cosmos.base.v1beta1.Coin distributed = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message EventEpochStart { uint64 active_streams_num = 1; }

message EventPumped {
  message Rollapp {
    string rollapp_id = 1;
    cosmos.base.v1beta1.Coin pumpCoin = 2 [ (gogoproto.nullable) = false ];
    cosmos.base.v1beta1.Coin tokenOut = 3 [ (gogoproto.nullable) = false ];
    // Why this rollapp was skipped when pumping, ie pump error
    string skip_reason = 4;
  }

  message Pool {
    uint64 pool_id = 1;
    cosmos.base.v1beta1.Coin pumpCoin = 2 [ (gogoproto.nullable) = false ];
    cosmos.base.v1beta1.Coin tokenOut = 3 [ (gogoproto.nullable) = false ];
  }

  uint64 stream_id = 1;

  repeated Rollapp rollapps = 2 [ (gogoproto.nullable) = false ];

  Pool pool = 3;

  // Expected pump amount â€“ how much the stream should've pumped
  // (not accounting for skipped RAs)
  repeated cosmos.base.v1beta1.Coin pumped = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}