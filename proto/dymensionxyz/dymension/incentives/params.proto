syntax = "proto3";
package dymensionxyz.dymension.incentives;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/duration.proto";


option go_package = "github.com/dymensionxyz/dymension/v3/x/incentives/types";
// Params holds parameters for the incentives module
message Params {
  // distr_epoch_identifier is what epoch type distribution will be triggered by
  // (day, week, etc.)
  string distr_epoch_identifier = 1
      [ (gogoproto.moretags) = "yaml:\"distr_epoch_identifier\"" ];
  // CreateGaugeBaseFee is a base fee required to create a new gauge. The final
  // fee is calculated as
  // Fee = CreateGaugeBaseFee + AddDenomFee * (len(Denoms) + len(GaugeDenoms)).
  string create_gauge_base_fee = 2 [
    (gogoproto.nullable) = false,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int"
  ];
  // AddToGaugeBaseFee is a base fee required to add to gauge. The final
  // fee is calculated as
  // Fee = AddToGaugeBaseFee + AddDenomFee * len(Denoms).
  string add_to_gauge_base_fee = 3 [
    (gogoproto.nullable) = false,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int"
  ];
  // AddDenomFee is a fee charged for adding every new denom to the gauge.
  string add_denom_fee = 4 [
    (gogoproto.nullable) = false,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int"
  ];

  // min_value_for_distribution is the minimum amount a token must be worth
  // in order to be eligible for distribution. If the token is worth
  // less than this amount (or the route between the two denoms is not
  // registered), it will not be distributed and is forfeited to the remaining
  // distributees that are eligible.
  cosmos.base.v1beta1.Coin min_value_for_distribution = 5
      [ (gogoproto.nullable) = false ];

  // min_lock_age is the minimum age a lock must be to be eligible for
  // distribution. If the lock is less than this age, it will not be distributed
  // and is forfeited to the remaining distributees that are eligible
  google.protobuf.Duration min_lock_age = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"min_lock_age\""
  ];


  enum RollappGaugesModes {
    ActiveOnly = 0;
    AllRollapps = 1;
  }

  // RollappGaugesModes switches between wether rollapp gauge can distribute
  // rewards to only active rollapps or all rollapps can get rewards
  RollappGaugesModes rollapp_gauges_mode = 7;
}
