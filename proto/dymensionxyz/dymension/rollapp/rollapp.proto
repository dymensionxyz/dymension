syntax = "proto3";
package dymensionxyz.dymension.rollapp;

option go_package = "github.com/dymensionxyz/dymension/v3/x/rollapp/types";
import "gogoproto/gogo.proto";
import "dymensionxyz/dymension/rollapp/state_info.proto";
import "cosmos/base/v1beta1/coin.proto";

// RollappGenesisState is a partial repr of the state the hub can expect the rollapp to be in upon genesis
message RollappGenesisState {
  reserved 1;
  // If true, then full usage of the canonical ibc transfer channel is enabled.
  // Note: in v3.1.0 and prior this field marked the completion of the 'genesis event'
  // Keeping and renaming the field enables a seamless upgrade https://www.notion.so/dymension/ADR-x-Genesis-Bridge-Phase-2-89769aa551b5440b9ed403a101775ce1?pvs=4#89698384d815435b87393dbe45bc5a74
  // to the new genesis transfer protocol
  // Note: if this field is false, ibc transfers may still be allowed in one or either direction.
  bool transfers_enabled = 2;
}

// Rollapp defines a rollapp object. First the RollApp is created and then
// sequencers can be created and attached. The RollApp is identified by rollappId
message Rollapp {
  // The unique identifier of the rollapp chain.
  // The rollappId follows the same standard as cosmos chain_id.
  string rollappId = 1;
  // creator is the bech32-encoded address of the rollapp creator.
  string creator = 2;
  // version is the software and configuration version.
  // starts from 1 and increases by one on every MsgUpdateState
  uint64 version = 3;
  // maxSequencers is the maximum number of sequencers.
  uint64 maxSequencers = 4;
  // permissionedAddresses is a bech32-encoded address list of the sequencers that are allowed to serve this rollappId.
  // In the case of an empty list, the rollapp is considered permissionless.
  repeated string permissionedAddresses = 5;
  reserved 6;
  // genesis_state is a partial repr of the state the hub can expect the rollapp to be in upon genesis
  RollappGenesisState genesis_state = 7 [(gogoproto.nullable) = false];
  // channel_id will be set to the canonical IBC channel of the rollapp.
  string channel_id = 8;
  // frozen is a boolean that indicates if the rollapp is frozen.
  bool frozen = 9;
  // registeredDenoms is a list of registered denom bases on this rollapp
  repeated string registeredDenoms = 10;
}

// Rollapp summary is a compact representation of Rollapp
message RollappSummary {
  // The unique identifier of the rollapp chain.
  // The rollappId follows the same standard as cosmos chain_id.
  string rollappId = 1;
  // Defines the index of the last rollapp UpdateState.
  StateInfoIndex latestStateIndex = 2;
  // Defines the index of the last rollapp UpdateState that was finalized.
  StateInfoIndex latestFinalizedStateIndex = 3;
}

