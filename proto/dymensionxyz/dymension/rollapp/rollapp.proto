syntax = "proto3";
package dymensionxyz.dymension.rollapp;

option go_package = "github.com/dymensionxyz/dymension/v3/x/rollapp/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";

import "dymensionxyz/dymension/rollapp/state_info.proto";
import "dymensionxyz/dymension/rollapp/metadata.proto";

// RollappGenesisState is a partial repr of the state the hub can expect the rollapp to be in upon genesis
message RollappGenesisState {
  reserved 1;
  // If true, then full usage of the canonical ibc transfer channel is enabled.
  // Note: in v3.1.0 and prior this field marked the completion of the 'genesis event'
  // Keeping and renaming the field enables a seamless upgrade https://www.notion.so/dymension/ADR-x-Genesis-Bridge-Phase-2-89769aa551b5440b9ed403a101775ce1?pvs=4#89698384d815435b87393dbe45bc5a74
  // to the new genesis transfer protocol
  // Note: if this field is false, ibc transfers may still be allowed in one or either direction.
  bool transfers_enabled = 2;
}

// Rollapp defines a rollapp object. First, the RollApp is created and then
// sequencers can be created and attached. The RollApp is identified by rollappId
message Rollapp {
  // The unique identifier of the rollapp chain.
  // The rollapp_id follows the same standard as cosmos chain_id.
  string rollapp_id = 1;
  // owner is the bech32-encoded address of the rollapp owner.
  string owner = 2;
  // field numbers not to be reused
  reserved 3 to 6;
  // genesis_state is a partial repr of the state the hub can expect the rollapp to be in upon genesis
  RollappGenesisState genesis_state = 7 [(gogoproto.nullable) = false];
  // channel_id will be set to the canonical IBC channel of the rollapp.
  string channel_id = 8;
  // frozen is a boolean that indicates if the rollapp is frozen.
  bool frozen = 9;
  // registeredDenoms is a list of registered denom bases on this rollapp
  repeated string registeredDenoms = 10;
  // unique bech32 prefix
  string bech32_prefix = 11;
  // checksum used to verify integrity of the genesis file
  string genesis_checksum = 12;
  // metadata is the rollapp metadata
  RollappMetadata metadata = 14;
  // initial_sequencer is an option to preset one or more coma-separated bech32-encoded addresses of the
  // sequencer(s) that are allowed to initially register and serve for this rollapp.
  // if left empty, no sequencer is allowed to register.
  // if set to "*" any sequencer can register.
  string initial_sequencer = 15;

  enum VMType {
    Unspecified = 0;
    EVM = 1;
    WASM = 2;
  }
  // vm_type is the type of rollapp machine: EVM or WASM
  VMType vm_type = 16;
  // sealed is a boolean that indicates if the immutable fields are no longer updatable.
  bool sealed = 17;
  // LivenessEventHeight is the height of an upcoming liveness event (slash or jail)
  // 0 means not set
  int64 liveness_event_height = 18;
  // The LastStateUpdateHeight HUB height when the last state update was received
  int64 last_state_update_height = 19;
}

// Rollapp summary is a compact representation of Rollapp
message RollappSummary {
  // The unique identifier of the rollapp chain.
  // The rollappId follows the same standard as cosmos chain_id.
  string rollappId = 1;
  // Defines the index of the last rollapp UpdateState.
  StateInfoIndex latestStateIndex = 2;
  // Defines the index of the last rollapp UpdateState that was finalized.
  StateInfoIndex latestFinalizedStateIndex = 3;
  uint64 latestHeight = 4; // TODO:
  uint64 latestFinalizedHeight = 5; // TODO:
}

