syntax = "proto3";
package osmosis.gamm.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/dymensionxyz/dymension/x/gamm/types";

// GenesisState defines the gamm module's genesis state.
message GenesisState {
  repeated google.protobuf.Any pools = 1
  [ (cosmos_proto.accepts_interface) = "PoolI" ];
  // will be renamed to next_pool_id in an upcoming version
  uint64 next_pool_number = 2;
  Params params = 3 [ (gogoproto.nullable) = false ];
}

message Params {
  repeated cosmos.base.v1beta1.Coin pool_creation_fee = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"pool_creation_fee\"",
    (gogoproto.nullable) = false
  ];

  bool global_fees = 2;

  GlobalPoolParams pool_params = 3 [
    (gogoproto.moretags) = "yaml:\"balancer_pool_params\"",
    (gogoproto.nullable) = false
  ];

}

message GlobalPoolParams {
  string swap_fee = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"swap_fee\"",
    (gogoproto.nullable) = false
  ];
  string exit_fee = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"exit_fee\"",
    (gogoproto.nullable) = false
  ];
}