syntax = "proto3";
package dymensionxyz.dymension.rollapp;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "dymension/rollapp/params.proto";
import "dymension/rollapp/rollapp.proto";
// this line is used by starport scaffolding # 1
import "dymension/rollapp/state_info.proto";

option go_package = "github.com/dymensionxyz/dymension/x/rollapp/types";

// Query defines the gRPC querier service.
service Query {
	// Parameters queries the parameters of the module.
	rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
		option (google.api.http).get = "/dymensionxyz/dymension/rollapp/params";
	}
  	// Queries a Rollapp by index.
	rpc Rollapp(QueryGetRollappRequest) returns (QueryGetRollappResponse) {
		option (google.api.http).get = "/dymensionxyz/dymension/rollapp/rollapp/{rollappId}";
	}

	// Queries a Rollapp by index.
	rpc RollappByEIP155(QueryGetRollappByEIP155Request) returns (QueryGetRollappResponse) {
		option (google.api.http).get = "/dymensionxyz/dymension/rollapp/eip155/{eip155}";
	}

	// Queries a list of Rollapp items.
	rpc RollappAll(QueryAllRollappRequest) returns (QueryAllRollappResponse) {
		option (google.api.http).get = "/dymensionxyz/dymension/rollapp/rollapp";
	}

	// Queries a LatestStateIndex by rollapp-id.
	rpc LatestStateIndex(QueryGetLatestStateIndexRequest) returns (QueryGetLatestStateIndexResponse) {
		option (google.api.http).get = "/dymensionxyz/dymension/rollapp/latest_state_index/{rollappId}";
	}

	// Queries a StateInfo by index.
	rpc StateInfo(QueryGetStateInfoRequest) returns (QueryGetStateInfoResponse) {
		option (google.api.http).get = "/dymensionxyz/dymension/rollapp/state_info/{rollappId}/{index}";
	}

	// Queries a list of StateInfo items.
	rpc StateInfoAll(QueryAllStateInfoRequest) returns (QueryAllStateInfoResponse) {
		option (google.api.http).get = "/dymensionxyz/dymension/rollapp/state_info";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetRollappRequest {
	  string rollappId = 1;
}

message QueryGetRollappByEIP155Request {
	uint64 eip155 = 1;
}

message QueryGetLatestStateIndexRequest {
	string rollappId = 1;
	bool finalized = 2;
}

message QueryGetLatestStateIndexResponse {
	StateInfoIndex stateIndex = 1 [(gogoproto.nullable) = false];
}

message QueryGetRollappResponse {
	Rollapp rollapp = 1 [(gogoproto.nullable) = false];
	// Defines the index of the last rollapp UpdateState.
	StateInfoIndex latestStateIndex = 2;
	// Defines the index of the last rollapp UpdateState that was finalized.
	StateInfoIndex latestFinalizedStateIndex = 3;
}

message QueryAllRollappRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRollappResponse {
	repeated RollappSummary rollapp = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetStateInfoRequest {
	  string rollappId = 1;
	  uint64 index = 2;
		uint64 height = 3;
		bool finalized = 4;
}

message QueryGetStateInfoResponse {
	StateInfo stateInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllStateInfoRequest {
	string rollappId = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllStateInfoResponse {
	repeated StateInfoSummary stateInfo = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
