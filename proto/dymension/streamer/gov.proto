syntax = "proto3";
package dymensionxyz.dymension.streamer;


import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/dymensionxyz/dymension/x/streamer/types";


message CreateStreamProposal {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;
  
  string title = 1;
  string description = 2;
  
    // distribute_to show which lock the stream should distribute to by time
    string distribute_to = 3;
    // coins are coin(s) to be distributed by the stream
    repeated cosmos.base.v1beta1.Coin coins = 4 [
      (gogoproto.nullable) = false,
      (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
    ];
    // start_time is the distribution start time
    google.protobuf.Timestamp start_time = 5 [
      (gogoproto.stdtime) = true,
      (gogoproto.nullable) = false,
      (gogoproto.moretags) = "yaml:\"timestamp\""
    ];
  
    string distr_epoch_identifier = 6
    [ (gogoproto.moretags) = "yaml:\"distr_epoch_identifier\"" ];
  
    // num_epochs_paid_over is the number of epochs distribution will be completed
    // over
    uint64 num_epochs_paid_over = 7;
  }