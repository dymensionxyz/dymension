// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dymensionxyz/dymension/iro/params.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Params is a module parameters.
type Params struct {
	TakerFee cosmossdk_io_math.LegacyDec `protobuf:"bytes,1,opt,name=taker_fee,json=takerFee,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"taker_fee"`
	// The fee for creating a plan in rollapp tokens (e.g 1000000000000000000 for
	// 1Token fee) must be > 1 The cost in dym is charged from the creator
	CreationFee cosmossdk_io_math.Int `protobuf:"bytes,2,opt,name=creation_fee,json=creationFee,proto3,customtype=cosmossdk.io/math.Int" json:"creation_fee"`
	// Minimum plan duration
	// when creating a plan, the plan duration should be greater than or equal to
	// this value plan duration is from the start time to the pre-launch time
	MinPlanDuration time.Duration `protobuf:"bytes,3,opt,name=min_plan_duration,json=minPlanDuration,proto3,stdduration" json:"min_plan_duration"`
	// The minimum time after settlement when the incentives distribution will
	// start
	IncentivesMinStartTimeAfterSettlement time.Duration `protobuf:"bytes,4,opt,name=incentives_min_start_time_after_settlement,json=incentivesMinStartTimeAfterSettlement,proto3,stdduration" json:"incentives_min_start_time_after_settlement"`
	// The minimum number of epochs over which the incentives will be paid
	IncentivesMinNumEpochsPaidOver uint64 `protobuf:"varint,5,opt,name=incentives_min_num_epochs_paid_over,json=incentivesMinNumEpochsPaidOver,proto3" json:"incentives_min_num_epochs_paid_over,omitempty"`
	// The minimum part of the raised liquidity that must be used for pool
	// bootstrapping the other part goes to the founder
	MinLiquidityPart cosmossdk_io_math.LegacyDec `protobuf:"bytes,6,opt,name=min_liquidity_part,json=minLiquidityPart,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"min_liquidity_part"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_321dd4e17bb4cbec, []int{0}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetMinPlanDuration() time.Duration {
	if m != nil {
		return m.MinPlanDuration
	}
	return 0
}

func (m *Params) GetIncentivesMinStartTimeAfterSettlement() time.Duration {
	if m != nil {
		return m.IncentivesMinStartTimeAfterSettlement
	}
	return 0
}

func (m *Params) GetIncentivesMinNumEpochsPaidOver() uint64 {
	if m != nil {
		return m.IncentivesMinNumEpochsPaidOver
	}
	return 0
}

func init() {
	proto.RegisterType((*Params)(nil), "dymensionxyz.dymension.iro.Params")
}

func init() {
	proto.RegisterFile("dymensionxyz/dymension/iro/params.proto", fileDescriptor_321dd4e17bb4cbec)
}

var fileDescriptor_321dd4e17bb4cbec = []byte{
	// 496 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0xd3, 0xc1, 0x8a, 0xd3, 0x40,
	0x18, 0x07, 0xf0, 0x46, 0xd7, 0xb2, 0x9b, 0x15, 0xd4, 0xa0, 0xd0, 0xad, 0x90, 0x16, 0x45, 0x2c,
	0x8a, 0x19, 0xeb, 0x3e, 0x81, 0xa5, 0x0a, 0xab, 0x6b, 0xb7, 0x74, 0x3d, 0x79, 0x19, 0xa6, 0xc9,
	0xd7, 0x74, 0xd8, 0xce, 0x4c, 0x9c, 0xf9, 0x12, 0x36, 0x1e, 0x7c, 0x06, 0x8f, 0xbe, 0x81, 0x2f,
	0xe0, 0x43, 0xec, 0x71, 0xf1, 0x24, 0x1e, 0x56, 0x69, 0x5f, 0x44, 0x32, 0x49, 0xea, 0xba, 0x22,
	0x88, 0xb7, 0x7c, 0x7c, 0xff, 0xf9, 0x7d, 0xc3, 0x17, 0xc6, 0xbd, 0x1f, 0xe5, 0x02, 0xa4, 0xe1,
	0x4a, 0x1e, 0xe7, 0xef, 0xc8, 0xba, 0x20, 0x5c, 0x2b, 0x92, 0x30, 0xcd, 0x84, 0x09, 0x12, 0xad,
	0x50, 0x79, 0xed, 0xf3, 0xc1, 0x60, 0x5d, 0x04, 0x5c, 0xab, 0xf6, 0xcd, 0x58, 0xc5, 0xca, 0xc6,
	0x48, 0xf1, 0x55, 0x9e, 0x68, 0x77, 0x62, 0xa5, 0xe2, 0x05, 0x10, 0x5b, 0x4d, 0xd3, 0x19, 0x41,
	0x2e, 0xc0, 0x20, 0x13, 0x49, 0x15, 0xf0, 0x2f, 0x06, 0xa2, 0x54, 0x33, 0x2c, 0xd0, 0xaa, 0x1f,
	0x2a, 0x23, 0x94, 0x21, 0x53, 0x66, 0x80, 0x64, 0xfd, 0x29, 0x20, 0xeb, 0x93, 0x50, 0xf1, 0xba,
	0xbf, 0x53, 0xf6, 0x69, 0x39, 0xb9, 0x2c, 0xca, 0xd6, 0x9d, 0x4f, 0x1b, 0x6e, 0x73, 0x6c, 0xaf,
	0xef, 0x8d, 0xdc, 0x2d, 0x64, 0x47, 0xa0, 0xe9, 0x0c, 0xa0, 0xe5, 0x74, 0x9d, 0xde, 0xd6, 0xa0,
	0x7f, 0x72, 0xd6, 0x69, 0x7c, 0x3b, 0xeb, 0xdc, 0x2e, 0xcf, 0x98, 0xe8, 0x28, 0xe0, 0x8a, 0x08,
	0x86, 0xf3, 0x60, 0x1f, 0x62, 0x16, 0xe6, 0x43, 0x08, 0xbf, 0x7c, 0x7e, 0xe4, 0x56, 0xe4, 0x10,
	0xc2, 0xc9, 0xa6, 0x35, 0x9e, 0x03, 0x78, 0x23, 0xf7, 0x6a, 0xa8, 0xc1, 0xde, 0xd3, 0x92, 0x97,
	0x2c, 0xf9, 0xb0, 0x22, 0x6f, 0xfd, 0x49, 0xee, 0x49, 0x3c, 0x87, 0xed, 0x49, 0x9c, 0x6c, 0xd7,
	0x40, 0xe1, 0x1d, 0xb8, 0x37, 0x04, 0x97, 0x34, 0x59, 0x30, 0x49, 0xeb, 0x05, 0xb4, 0x2e, 0x77,
	0x9d, 0xde, 0xf6, 0x93, 0x9d, 0xa0, 0xdc, 0x50, 0x50, 0x6f, 0x28, 0x18, 0x56, 0x81, 0xc1, 0x66,
	0x31, 0xef, 0xe3, 0xf7, 0x8e, 0x33, 0xb9, 0x26, 0xb8, 0x1c, 0x2f, 0x98, 0xac, 0x5b, 0xde, 0x7b,
	0xf7, 0x01, 0x97, 0x21, 0x48, 0xe4, 0x19, 0x18, 0x5a, 0xd8, 0x06, 0x99, 0x46, 0x5a, 0xac, 0x9f,
	0xb2, 0x19, 0x82, 0xa6, 0x06, 0x10, 0x17, 0x20, 0x40, 0x62, 0x6b, 0xe3, 0xdf, 0x27, 0xdd, 0xfb,
	0xc5, 0xbe, 0xe2, 0xf2, 0xb0, 0x40, 0x5f, 0x73, 0x01, 0x4f, 0x0b, 0xf2, 0x70, 0x2d, 0x7a, 0x2f,
	0xdd, 0xbb, 0x17, 0xe6, 0xcb, 0x54, 0x50, 0x48, 0x54, 0x38, 0x37, 0x34, 0x61, 0x3c, 0xa2, 0x2a,
	0x03, 0xdd, 0xba, 0xd2, 0x75, 0x7a, 0x1b, 0x13, 0xff, 0x37, 0x73, 0x94, 0x8a, 0x67, 0x36, 0x37,
	0x66, 0x3c, 0x3a, 0xc8, 0x40, 0x7b, 0xd4, 0xf5, 0x0a, 0x61, 0xc1, 0xdf, 0xa6, 0x3c, 0xe2, 0x98,
	0xd3, 0x84, 0x69, 0x6c, 0x35, 0xff, 0xf7, 0x37, 0x5e, 0x17, 0x5c, 0xee, 0xd7, 0xd6, 0x98, 0x69,
	0x1c, 0xbc, 0x38, 0x59, 0xfa, 0xce, 0xe9, 0xd2, 0x77, 0x7e, 0x2c, 0x7d, 0xe7, 0xc3, 0xca, 0x6f,
	0x9c, 0xae, 0xfc, 0xc6, 0xd7, 0x95, 0xdf, 0x78, 0xf3, 0x38, 0xe6, 0x38, 0x4f, 0xa7, 0x41, 0xa8,
	0x04, 0xf9, 0xcb, 0x2b, 0xc9, 0x76, 0xc9, 0xb1, 0x7d, 0x2a, 0x98, 0x27, 0x60, 0xa6, 0x4d, 0xbb,
	0xbd, 0xdd, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xdf, 0xcc, 0xff, 0x55, 0x03, 0x00, 0x00,
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.MinLiquidityPart.Size()
		i -= size
		if _, err := m.MinLiquidityPart.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintParams(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if m.IncentivesMinNumEpochsPaidOver != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.IncentivesMinNumEpochsPaidOver))
		i--
		dAtA[i] = 0x28
	}
	n1, err1 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.IncentivesMinStartTimeAfterSettlement, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.IncentivesMinStartTimeAfterSettlement):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintParams(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	n2, err2 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.MinPlanDuration, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.MinPlanDuration):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintParams(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	{
		size := m.CreationFee.Size()
		i -= size
		if _, err := m.CreationFee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintParams(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.TakerFee.Size()
		i -= size
		if _, err := m.TakerFee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintParams(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.TakerFee.Size()
	n += 1 + l + sovParams(uint64(l))
	l = m.CreationFee.Size()
	n += 1 + l + sovParams(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.MinPlanDuration)
	n += 1 + l + sovParams(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.IncentivesMinStartTimeAfterSettlement)
	n += 1 + l + sovParams(uint64(l))
	if m.IncentivesMinNumEpochsPaidOver != 0 {
		n += 1 + sovParams(uint64(m.IncentivesMinNumEpochsPaidOver))
	}
	l = m.MinLiquidityPart.Size()
	n += 1 + l + sovParams(uint64(l))
	return n
}

func sovParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozParams(x uint64) (n int) {
	return sovParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TakerFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TakerFee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationFee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CreationFee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinPlanDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.MinPlanDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncentivesMinStartTimeAfterSettlement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.IncentivesMinStartTimeAfterSettlement, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncentivesMinNumEpochsPaidOver", wireType)
			}
			m.IncentivesMinNumEpochsPaidOver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IncentivesMinNumEpochsPaidOver |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinLiquidityPart", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MinLiquidityPart.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthParams        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowParams          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupParams = fmt.Errorf("proto: unexpected end of group")
)
