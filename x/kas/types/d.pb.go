// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dymensionxyz/dymension/kas/d.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type WithdrawalStatus int32

const (
	WithdrawalStatus_WITHDRAWAL_STATUS_UNSPECIFIED WithdrawalStatus = 0
	WithdrawalStatus_WITHDRAWAL_STATUS_UNPROCESSED WithdrawalStatus = 1
	WithdrawalStatus_WITHDRAWAL_STATUS_PROCESSED   WithdrawalStatus = 2
)

var WithdrawalStatus_name = map[int32]string{
	0: "WITHDRAWAL_STATUS_UNSPECIFIED",
	1: "WITHDRAWAL_STATUS_UNPROCESSED",
	2: "WITHDRAWAL_STATUS_PROCESSED",
}

var WithdrawalStatus_value = map[string]int32{
	"WITHDRAWAL_STATUS_UNSPECIFIED": 0,
	"WITHDRAWAL_STATUS_UNPROCESSED": 1,
	"WITHDRAWAL_STATUS_PROCESSED":   2,
}

func (x WithdrawalStatus) String() string {
	return proto.EnumName(WithdrawalStatus_name, int32(x))
}

func (WithdrawalStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_23b35f6594a47d15, []int{0}
}

// Kaspa transaction outpoint https://github.com/kaspanet/rusty-kaspa/blob/1adeae8e5e2bdf7b65265420d294a356edc6d9e6/consensus/client/src/outpoint.rs#L91
type TransactionOutpoint struct {
	// 32 byte hash
	TransactionId []byte `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// pointer to the output in the transaction
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *TransactionOutpoint) Reset()         { *m = TransactionOutpoint{} }
func (m *TransactionOutpoint) String() string { return proto.CompactTextString(m) }
func (*TransactionOutpoint) ProtoMessage()    {}
func (*TransactionOutpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_23b35f6594a47d15, []int{0}
}
func (m *TransactionOutpoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TransactionOutpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransactionOutpoint.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TransactionOutpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionOutpoint.Merge(m, src)
}
func (m *TransactionOutpoint) XXX_Size() int {
	return m.Size()
}
func (m *TransactionOutpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionOutpoint.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionOutpoint proto.InternalMessageInfo

func (m *TransactionOutpoint) GetTransactionId() []byte {
	if m != nil {
		return m.TransactionId
	}
	return nil
}

func (m *TransactionOutpoint) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// an index into a set of a dispatched Hyperlane withdrawal messages
// see https://github.com/dymensionxyz/hyperlane-cosmos/blob/5b73e596185ce009f7d9d412e26294c52e3108a8/x/core/keeper/query_server.go#L39
// and https://github.com/dymensionxyz/hyperlane-cosmos/blob/5b73e596185ce009f7d9d412e26294c52e3108a8/proto/hyperlane/core/v1/query.proto#L88-L92
type WithdrawalID struct {
	// in stringified hex address format
	MailboxId string `protobuf:"bytes,1,opt,name=mailbox_id,json=mailboxId,proto3" json:"mailbox_id,omitempty"`
	// in stringified hex address format
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (m *WithdrawalID) Reset()         { *m = WithdrawalID{} }
func (m *WithdrawalID) String() string { return proto.CompactTextString(m) }
func (*WithdrawalID) ProtoMessage()    {}
func (*WithdrawalID) Descriptor() ([]byte, []int) {
	return fileDescriptor_23b35f6594a47d15, []int{1}
}
func (m *WithdrawalID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WithdrawalID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WithdrawalID.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WithdrawalID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawalID.Merge(m, src)
}
func (m *WithdrawalID) XXX_Size() int {
	return m.Size()
}
func (m *WithdrawalID) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawalID.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawalID proto.InternalMessageInfo

func (m *WithdrawalID) GetMailboxId() string {
	if m != nil {
		return m.MailboxId
	}
	return ""
}

func (m *WithdrawalID) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func init() {
	proto.RegisterEnum("dymensionxyz.dymension.kas.WithdrawalStatus", WithdrawalStatus_name, WithdrawalStatus_value)
	proto.RegisterType((*TransactionOutpoint)(nil), "dymensionxyz.dymension.kas.TransactionOutpoint")
	proto.RegisterType((*WithdrawalID)(nil), "dymensionxyz.dymension.kas.WithdrawalID")
}

func init() {
	proto.RegisterFile("dymensionxyz/dymension/kas/d.proto", fileDescriptor_23b35f6594a47d15)
}

var fileDescriptor_23b35f6594a47d15 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x6b, 0xf2, 0x30,
	0x18, 0xc7, 0x1b, 0xe1, 0x7d, 0xc1, 0xa0, 0x43, 0x3a, 0x0f, 0xce, 0x61, 0xe7, 0x84, 0x81, 0xec,
	0xd0, 0x0e, 0xfc, 0x04, 0xce, 0x76, 0x2c, 0x43, 0xa6, 0xb4, 0x15, 0x61, 0x97, 0x12, 0x4d, 0xa9,
	0x41, 0x9b, 0x88, 0x89, 0x5b, 0xbb, 0x4f, 0xb1, 0x8f, 0xb5, 0xa3, 0xc7, 0x1d, 0x87, 0x7e, 0x91,
	0x61, 0xe3, 0x54, 0x18, 0xde, 0xf2, 0xff, 0xfd, 0x7f, 0x79, 0x0e, 0xcf, 0x03, 0x1b, 0x24, 0x8d,
	0x43, 0x26, 0x28, 0x67, 0x49, 0xfa, 0x6e, 0xed, 0x83, 0x35, 0xc5, 0xc2, 0x22, 0xe6, 0x7c, 0xc1,
	0x25, 0xd7, 0xab, 0xc7, 0x8e, 0xb9, 0x0f, 0xe6, 0x14, 0x8b, 0xea, 0xc5, 0x98, 0x8b, 0x98, 0x8b,
	0x20, 0x33, 0x2d, 0x15, 0xd4, 0xb7, 0x6a, 0x39, 0xe2, 0x11, 0x57, 0x7c, 0xfb, 0x52, 0xb4, 0xe1,
	0xc2, 0x73, 0x7f, 0x81, 0x99, 0xc0, 0x63, 0x49, 0x39, 0xeb, 0x2d, 0xe5, 0x9c, 0x53, 0x26, 0xf5,
	0x1b, 0x78, 0x26, 0x0f, 0x38, 0xa0, 0xa4, 0x02, 0xea, 0xa0, 0x59, 0x70, 0x8b, 0x47, 0x14, 0x11,
	0xbd, 0x0c, 0xff, 0x51, 0x46, 0xc2, 0xa4, 0x92, 0xab, 0x83, 0x66, 0xd1, 0x55, 0xa1, 0xd1, 0x85,
	0x85, 0x21, 0x95, 0x13, 0xb2, 0xc0, 0x6f, 0x78, 0x86, 0x6c, 0xbd, 0x06, 0x61, 0x8c, 0xe9, 0x6c,
	0xc4, 0x93, 0xdf, 0x41, 0x79, 0x37, 0xbf, 0x23, 0x88, 0x64, 0x75, 0x28, 0x04, 0x8e, 0xc2, 0x6d,
	0x9d, 0xdb, 0xd5, 0x8a, 0x20, 0x72, 0x9b, 0xc2, 0xd2, 0x61, 0x9a, 0x27, 0xb1, 0x5c, 0x0a, 0xfd,
	0x1a, 0xd6, 0x86, 0xc8, 0x7f, 0xb4, 0xdd, 0xf6, 0xb0, 0xdd, 0x0d, 0x3c, 0xbf, 0xed, 0x0f, 0xbc,
	0x60, 0xf0, 0xec, 0xf5, 0x9d, 0x0e, 0x7a, 0x40, 0x8e, 0x5d, 0xd2, 0x4e, 0x29, 0x7d, 0xb7, 0xd7,
	0x71, 0x3c, 0xcf, 0xb1, 0x4b, 0x40, 0xbf, 0x82, 0x97, 0x7f, 0x95, 0x83, 0x90, 0xbb, 0x7f, 0xfa,
	0x5c, 0x1b, 0x60, 0xb5, 0x36, 0xc0, 0xf7, 0xda, 0x00, 0x1f, 0x1b, 0x43, 0x5b, 0x6d, 0x0c, 0xed,
	0x6b, 0x63, 0x68, 0x2f, 0x77, 0x11, 0x95, 0x93, 0xe5, 0xc8, 0x1c, 0xf3, 0xd8, 0x3a, 0x71, 0xb2,
	0xd7, 0x96, 0x95, 0x64, 0x77, 0x93, 0xe9, 0x3c, 0x14, 0xa3, 0xff, 0xd9, 0xbe, 0x5b, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x99, 0x9b, 0x26, 0xa6, 0xe2, 0x01, 0x00, 0x00,
}

func (m *TransactionOutpoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TransactionOutpoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TransactionOutpoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Index != 0 {
		i = encodeVarintD(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x10
	}
	if len(m.TransactionId) > 0 {
		i -= len(m.TransactionId)
		copy(dAtA[i:], m.TransactionId)
		i = encodeVarintD(dAtA, i, uint64(len(m.TransactionId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WithdrawalID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WithdrawalID) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WithdrawalID) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MessageId) > 0 {
		i -= len(m.MessageId)
		copy(dAtA[i:], m.MessageId)
		i = encodeVarintD(dAtA, i, uint64(len(m.MessageId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MailboxId) > 0 {
		i -= len(m.MailboxId)
		copy(dAtA[i:], m.MailboxId)
		i = encodeVarintD(dAtA, i, uint64(len(m.MailboxId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintD(dAtA []byte, offset int, v uint64) int {
	offset -= sovD(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TransactionOutpoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TransactionId)
	if l > 0 {
		n += 1 + l + sovD(uint64(l))
	}
	if m.Index != 0 {
		n += 1 + sovD(uint64(m.Index))
	}
	return n
}

func (m *WithdrawalID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MailboxId)
	if l > 0 {
		n += 1 + l + sovD(uint64(l))
	}
	l = len(m.MessageId)
	if l > 0 {
		n += 1 + l + sovD(uint64(l))
	}
	return n
}

func sovD(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozD(x uint64) (n int) {
	return sovD(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TransactionOutpoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowD
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TransactionOutpoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TransactionOutpoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowD
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthD
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthD
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransactionId = append(m.TransactionId[:0], dAtA[iNdEx:postIndex]...)
			if m.TransactionId == nil {
				m.TransactionId = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowD
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipD(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthD
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WithdrawalID) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowD
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WithdrawalID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WithdrawalID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailboxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowD
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthD
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthD
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MailboxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowD
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthD
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthD
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipD(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthD
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipD(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowD
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowD
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowD
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthD
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupD
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthD
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthD        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowD          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupD = fmt.Errorf("proto: unexpected end of group")
)
