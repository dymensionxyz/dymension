// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dymensionxyz/dymension/otcbuyback/purchase.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// PurchaseEntry represents a single purchase with its vesting schedule
type PurchaseEntry struct {
	// Amount of tokens purchased in this entry
	Amount cosmossdk_io_math.Int `protobuf:"bytes,1,opt,name=amount,proto3,customtype=cosmossdk.io/math.Int" json:"amount"`
	// When vesting starts for this purchase
	VestingStartTime time.Time `protobuf:"bytes,2,opt,name=vesting_start_time,json=vestingStartTime,proto3,stdtime" json:"vesting_start_time"`
	// Duration of vesting for this purchase
	VestingDuration time.Duration `protobuf:"bytes,3,opt,name=vesting_duration,json=vestingDuration,proto3,stdduration" json:"vesting_duration"`
}

func (m *PurchaseEntry) Reset()         { *m = PurchaseEntry{} }
func (m *PurchaseEntry) String() string { return proto.CompactTextString(m) }
func (*PurchaseEntry) ProtoMessage()    {}
func (*PurchaseEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea4ede97e2fff394, []int{0}
}
func (m *PurchaseEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PurchaseEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PurchaseEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PurchaseEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurchaseEntry.Merge(m, src)
}
func (m *PurchaseEntry) XXX_Size() int {
	return m.Size()
}
func (m *PurchaseEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_PurchaseEntry.DiscardUnknown(m)
}

var xxx_messageInfo_PurchaseEntry proto.InternalMessageInfo

func (m *PurchaseEntry) GetVestingStartTime() time.Time {
	if m != nil {
		return m.VestingStartTime
	}
	return time.Time{}
}

func (m *PurchaseEntry) GetVestingDuration() time.Duration {
	if m != nil {
		return m.VestingDuration
	}
	return 0
}

// Purchase represents a user's total purchases for an auction
// with support for overlapping vesting schedules
type Purchase struct {
	// List of purchase entries with their individual vesting schedules
	Entries []PurchaseEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries"`
	// Total amount claimed across all entries
	Claimed cosmossdk_io_math.Int `protobuf:"bytes,2,opt,name=claimed,proto3,customtype=cosmossdk.io/math.Int" json:"claimed"`
}

func (m *Purchase) Reset()         { *m = Purchase{} }
func (m *Purchase) String() string { return proto.CompactTextString(m) }
func (*Purchase) ProtoMessage()    {}
func (*Purchase) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea4ede97e2fff394, []int{1}
}
func (m *Purchase) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Purchase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Purchase.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Purchase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Purchase.Merge(m, src)
}
func (m *Purchase) XXX_Size() int {
	return m.Size()
}
func (m *Purchase) XXX_DiscardUnknown() {
	xxx_messageInfo_Purchase.DiscardUnknown(m)
}

var xxx_messageInfo_Purchase proto.InternalMessageInfo

func (m *Purchase) GetEntries() []PurchaseEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*PurchaseEntry)(nil), "dymensionxyz.dymension.otcbuyback.PurchaseEntry")
	proto.RegisterType((*Purchase)(nil), "dymensionxyz.dymension.otcbuyback.Purchase")
}

func init() {
	proto.RegisterFile("dymensionxyz/dymension/otcbuyback/purchase.proto", fileDescriptor_ea4ede97e2fff394)
}

var fileDescriptor_ea4ede97e2fff394 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x3f, 0x6f, 0xd4, 0x30,
	0x18, 0xc6, 0xcf, 0x14, 0xb5, 0xc5, 0x15, 0x02, 0x45, 0x20, 0x5d, 0x6f, 0x48, 0x8e, 0x4e, 0x27,
	0x21, 0xec, 0xfe, 0x19, 0xd8, 0x03, 0x1d, 0xba, 0xa0, 0x12, 0x98, 0x58, 0x22, 0x27, 0x31, 0x39,
	0xab, 0xb5, 0x1d, 0xc5, 0x6f, 0x4e, 0x0d, 0x9f, 0xa2, 0x23, 0x3b, 0x5f, 0x81, 0x0f, 0xd1, 0xb1,
	0x62, 0x42, 0x0c, 0x05, 0xdd, 0x7d, 0x09, 0x46, 0xe4, 0xd8, 0x2e, 0x05, 0x84, 0x10, 0xdb, 0xbd,
	0xf7, 0x3c, 0xbf, 0xe7, 0xd5, 0xf3, 0xc6, 0x78, 0xb7, 0xea, 0x25, 0x57, 0x46, 0x68, 0x75, 0xd6,
	0xbf, 0xa3, 0xd7, 0x03, 0xd5, 0x50, 0x16, 0x5d, 0x5f, 0xb0, 0xf2, 0x84, 0x36, 0x5d, 0x5b, 0xce,
	0x99, 0xe1, 0xa4, 0x69, 0x35, 0xe8, 0xe8, 0xd1, 0x4d, 0x82, 0x5c, 0x0f, 0xe4, 0x27, 0x31, 0x79,
	0x50, 0xeb, 0x5a, 0x0f, 0x6e, 0x6a, 0x7f, 0x39, 0x70, 0x92, 0xd4, 0x5a, 0xd7, 0xa7, 0x9c, 0x0e,
	0x53, 0xd1, 0xbd, 0xa5, 0x20, 0x24, 0x37, 0xc0, 0x64, 0xe3, 0x0d, 0xf1, 0xef, 0x86, 0xaa, 0x6b,
	0x19, 0xd8, 0x6c, 0xaf, 0x97, 0xda, 0x48, 0x6d, 0x68, 0xc1, 0x0c, 0xa7, 0x8b, 0xbd, 0x82, 0x03,
	0xdb, 0xa3, 0xa5, 0x16, 0x41, 0xdf, 0x76, 0x7a, 0xee, 0x36, 0xbb, 0xc1, 0x49, 0x3b, 0xdf, 0x11,
	0xbe, 0x7b, 0xec, 0x7b, 0x1c, 0x2a, 0x68, 0xfb, 0xe8, 0x19, 0x5e, 0x67, 0x52, 0x77, 0x0a, 0xc6,
	0x68, 0x8a, 0x66, 0x77, 0xd2, 0xc7, 0x17, 0x57, 0xc9, 0xe8, 0xcb, 0x55, 0xf2, 0xd0, 0x71, 0xa6,
	0x3a, 0x21, 0x42, 0x53, 0xc9, 0x60, 0x4e, 0x8e, 0x14, 0x7c, 0xfa, 0xf8, 0x04, 0xfb, 0xc0, 0x23,
	0x05, 0x99, 0x47, 0xa3, 0x0c, 0x47, 0x0b, 0x6e, 0x40, 0xa8, 0x3a, 0x37, 0xc0, 0x5a, 0xc8, 0x6d,
	0xa5, 0xf1, 0xad, 0x29, 0x9a, 0x6d, 0xed, 0x4f, 0x88, 0xab, 0x43, 0x42, 0x1d, 0xf2, 0x3a, 0xf4,
	0x4d, 0x37, 0xed, 0xb2, 0xf3, 0xaf, 0x09, 0xca, 0xee, 0x7b, 0xfe, 0x95, 0xc5, 0xad, 0x21, 0x7a,
	0x81, 0xc3, 0x7f, 0x79, 0xe8, 0x3f, 0x5e, 0x1b, 0x12, 0xb7, 0xff, 0x48, 0x7c, 0xee, 0x0d, 0x2e,
	0xf0, 0xbd, 0x0d, 0xbc, 0xe7, 0xe1, 0x20, 0xed, 0x7c, 0x40, 0x78, 0x33, 0x54, 0x8f, 0x8e, 0xf1,
	0x06, 0x57, 0xd0, 0x0a, 0x6e, 0xc6, 0x68, 0xba, 0x36, 0xdb, 0xda, 0xdf, 0x25, 0xff, 0xfc, 0x9c,
	0xe4, 0x97, 0xc3, 0xa5, 0xb7, 0xed, 0xaa, 0x2c, 0xc4, 0x44, 0x87, 0x78, 0xa3, 0x3c, 0x65, 0x42,
	0xf2, 0x6a, 0xe8, 0xfd, 0x9f, 0x87, 0x0c, 0x6c, 0xfa, 0xf2, 0x62, 0x19, 0xa3, 0xcb, 0x65, 0x8c,
	0xbe, 0x2d, 0x63, 0x74, 0xbe, 0x8a, 0x47, 0x97, 0xab, 0x78, 0xf4, 0x79, 0x15, 0x8f, 0xde, 0x3c,
	0xad, 0x05, 0xcc, 0xbb, 0x82, 0x94, 0x5a, 0xd2, 0xbf, 0x3c, 0xd6, 0xc5, 0x01, 0x3d, 0xbb, 0xf9,
	0x62, 0xa1, 0x6f, 0xb8, 0x29, 0xd6, 0x87, 0x33, 0x1d, 0xfc, 0x08, 0x00, 0x00, 0xff, 0xff, 0x1a,
	0x67, 0x5d, 0xff, 0xe3, 0x02, 0x00, 0x00,
}

func (m *PurchaseEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PurchaseEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PurchaseEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.VestingDuration, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.VestingDuration):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintPurchase(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x1a
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.VestingStartTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.VestingStartTime):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintPurchase(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x12
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPurchase(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Purchase) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Purchase) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Purchase) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Claimed.Size()
		i -= size
		if _, err := m.Claimed.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPurchase(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Entries) > 0 {
		for iNdEx := len(m.Entries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPurchase(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintPurchase(dAtA []byte, offset int, v uint64) int {
	offset -= sovPurchase(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PurchaseEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Amount.Size()
	n += 1 + l + sovPurchase(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.VestingStartTime)
	n += 1 + l + sovPurchase(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.VestingDuration)
	n += 1 + l + sovPurchase(uint64(l))
	return n
}

func (m *Purchase) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovPurchase(uint64(l))
		}
	}
	l = m.Claimed.Size()
	n += 1 + l + sovPurchase(uint64(l))
	return n
}

func sovPurchase(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPurchase(x uint64) (n int) {
	return sovPurchase(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PurchaseEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPurchase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PurchaseEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PurchaseEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestingStartTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.VestingStartTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestingDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.VestingDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPurchase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPurchase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Purchase) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPurchase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Purchase: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Purchase: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, PurchaseEntry{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Claimed", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Claimed.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPurchase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPurchase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPurchase(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPurchase
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPurchase
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPurchase
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPurchase
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPurchase        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPurchase          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPurchase = fmt.Errorf("proto: unexpected end of group")
)
