// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dymensionxyz/dymension/otcbuyback/purchase.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Purchase struct {
	// Amount of tokens purchased
	Amount cosmossdk_io_math.Int `protobuf:"bytes,1,opt,name=amount,proto3,customtype=cosmossdk.io/math.Int" json:"amount"`
	// Amount already claimed
	Claimed cosmossdk_io_math.Int `protobuf:"bytes,2,opt,name=claimed,proto3,customtype=cosmossdk.io/math.Int" json:"claimed"`
	// Start time of the claim option
	StartTime time.Time `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3,stdtime" json:"start_time"`
	// End time of the claim option
	EndTime time.Time `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3,stdtime" json:"end_time"`
}

func (m *Purchase) Reset()         { *m = Purchase{} }
func (m *Purchase) String() string { return proto.CompactTextString(m) }
func (*Purchase) ProtoMessage()    {}
func (*Purchase) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea4ede97e2fff394, []int{0}
}
func (m *Purchase) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Purchase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Purchase.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Purchase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Purchase.Merge(m, src)
}
func (m *Purchase) XXX_Size() int {
	return m.Size()
}
func (m *Purchase) XXX_DiscardUnknown() {
	xxx_messageInfo_Purchase.DiscardUnknown(m)
}

var xxx_messageInfo_Purchase proto.InternalMessageInfo

func (m *Purchase) GetStartTime() time.Time {
	if m != nil {
		return m.StartTime
	}
	return time.Time{}
}

func (m *Purchase) GetEndTime() time.Time {
	if m != nil {
		return m.EndTime
	}
	return time.Time{}
}

type UserPurchase struct {
	Buyer    string   `protobuf:"bytes,1,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Purchase Purchase `protobuf:"bytes,2,opt,name=purchase,proto3" json:"purchase"`
}

func (m *UserPurchase) Reset()         { *m = UserPurchase{} }
func (m *UserPurchase) String() string { return proto.CompactTextString(m) }
func (*UserPurchase) ProtoMessage()    {}
func (*UserPurchase) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea4ede97e2fff394, []int{1}
}
func (m *UserPurchase) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserPurchase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserPurchase.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserPurchase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPurchase.Merge(m, src)
}
func (m *UserPurchase) XXX_Size() int {
	return m.Size()
}
func (m *UserPurchase) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPurchase.DiscardUnknown(m)
}

var xxx_messageInfo_UserPurchase proto.InternalMessageInfo

func (m *UserPurchase) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

func (m *UserPurchase) GetPurchase() Purchase {
	if m != nil {
		return m.Purchase
	}
	return Purchase{}
}

func init() {
	proto.RegisterType((*Purchase)(nil), "dymensionxyz.dymension.otcbuyback.Purchase")
	proto.RegisterType((*UserPurchase)(nil), "dymensionxyz.dymension.otcbuyback.UserPurchase")
}

func init() {
	proto.RegisterFile("dymensionxyz/dymension/otcbuyback/purchase.proto", fileDescriptor_ea4ede97e2fff394)
}

var fileDescriptor_ea4ede97e2fff394 = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xc1, 0xce, 0xd2, 0x40,
	0x18, 0x6c, 0x11, 0xa1, 0x2c, 0x9e, 0x1a, 0x4c, 0x90, 0x43, 0x8b, 0x9c, 0x48, 0x88, 0xbb, 0x02,
	0x07, 0x8f, 0x26, 0x25, 0x1e, 0x38, 0x98, 0x68, 0xa3, 0x17, 0x2f, 0x64, 0xb7, 0x5d, 0x4b, 0x03,
	0xdb, 0x6d, 0xba, 0x5b, 0x42, 0x7d, 0x0a, 0x1e, 0xc0, 0xc7, 0xf0, 0x21, 0x38, 0x12, 0x4f, 0xc6,
	0x03, 0x1a, 0x78, 0x11, 0xd3, 0x6e, 0x5b, 0x89, 0x89, 0xf9, 0xc3, 0x6d, 0x67, 0xe7, 0x9b, 0xf9,
	0xf2, 0x4d, 0x06, 0xbc, 0xf4, 0x33, 0x46, 0x23, 0x11, 0xf2, 0x68, 0x9f, 0x7d, 0x41, 0x35, 0x40,
	0x5c, 0x7a, 0x24, 0xcd, 0x08, 0xf6, 0x36, 0x28, 0x4e, 0x13, 0x6f, 0x8d, 0x05, 0x85, 0x71, 0xc2,
	0x25, 0x37, 0x9f, 0xdf, 0x2a, 0x60, 0x0d, 0xe0, 0x5f, 0xc5, 0xa0, 0x17, 0xf0, 0x80, 0x17, 0xd3,
	0x28, 0x7f, 0x29, 0xe1, 0xc0, 0x0e, 0x38, 0x0f, 0xb6, 0x14, 0x15, 0x88, 0xa4, 0x9f, 0x91, 0x0c,
	0x19, 0x15, 0x12, 0xb3, 0xb8, 0x1c, 0xb0, 0xfe, 0x1d, 0xf0, 0xd3, 0x04, 0xcb, 0xdc, 0xbb, 0xe4,
	0x3d, 0x2e, 0x18, 0x17, 0x88, 0x60, 0x41, 0xd1, 0x6e, 0x4a, 0xa8, 0xc4, 0x53, 0xe4, 0xf1, 0xb0,
	0xe2, 0x9f, 0x29, 0x7e, 0xa5, 0x36, 0x2b, 0xa0, 0xa8, 0xd1, 0xd7, 0x06, 0x30, 0xde, 0x95, 0x77,
	0x98, 0x0b, 0xd0, 0xc2, 0x8c, 0xa7, 0x91, 0xec, 0xeb, 0x43, 0x7d, 0xdc, 0x71, 0x26, 0xc7, 0xb3,
	0xad, 0xfd, 0x3c, 0xdb, 0x4f, 0x95, 0x44, 0xf8, 0x1b, 0x18, 0x72, 0xc4, 0xb0, 0x5c, 0xc3, 0x65,
	0x24, 0xbf, 0x7f, 0x7b, 0x01, 0x4a, 0xaf, 0x65, 0x24, 0xdd, 0x52, 0x6a, 0xbe, 0x01, 0x6d, 0x6f,
	0x8b, 0x43, 0x46, 0xfd, 0x7e, 0xe3, 0x7e, 0x97, 0x4a, 0x6b, 0x2e, 0x00, 0x10, 0x12, 0x27, 0x72,
	0x95, 0x87, 0xd1, 0x7f, 0x34, 0xd4, 0xc7, 0xdd, 0xd9, 0x00, 0xaa, 0x20, 0x60, 0x15, 0x04, 0xfc,
	0x50, 0x25, 0xe5, 0x18, 0xf9, 0x96, 0xc3, 0x2f, 0x5b, 0x77, 0x3b, 0x85, 0x2e, 0x67, 0xcc, 0xd7,
	0xc0, 0xa0, 0x91, 0xaf, 0x2c, 0x9a, 0x77, 0x58, 0xb4, 0x69, 0xe4, 0xe7, 0xff, 0x23, 0x01, 0x9e,
	0x7c, 0x14, 0x34, 0xa9, 0x13, 0xea, 0x81, 0xc7, 0x24, 0xcd, 0x68, 0xa2, 0x02, 0x72, 0x15, 0x30,
	0xdf, 0x02, 0xa3, 0xea, 0x42, 0x71, 0x73, 0x77, 0x36, 0x81, 0x0f, 0x96, 0x01, 0x56, 0xa6, 0x4e,
	0x33, 0xdf, 0xeb, 0xd6, 0x16, 0xce, 0xfb, 0xe3, 0xc5, 0xd2, 0x4f, 0x17, 0x4b, 0xff, 0x7d, 0xb1,
	0xf4, 0xc3, 0xd5, 0xd2, 0x4e, 0x57, 0x4b, 0xfb, 0x71, 0xb5, 0xb4, 0x4f, 0xaf, 0x82, 0x50, 0xae,
	0x53, 0x02, 0x3d, 0xce, 0xd0, 0x7f, 0xfa, 0xb9, 0x9b, 0xa3, 0xfd, 0x6d, 0x49, 0x65, 0x16, 0x53,
	0x41, 0x5a, 0xc5, 0xb9, 0xf3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xd3, 0x1b, 0xc6, 0xd6,
	0x02, 0x00, 0x00,
}

func (m *Purchase) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Purchase) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Purchase) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.EndTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.EndTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintPurchase(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.StartTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StartTime):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintPurchase(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	{
		size := m.Claimed.Size()
		i -= size
		if _, err := m.Claimed.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPurchase(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPurchase(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *UserPurchase) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserPurchase) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserPurchase) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Purchase.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintPurchase(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Buyer) > 0 {
		i -= len(m.Buyer)
		copy(dAtA[i:], m.Buyer)
		i = encodeVarintPurchase(dAtA, i, uint64(len(m.Buyer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPurchase(dAtA []byte, offset int, v uint64) int {
	offset -= sovPurchase(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Purchase) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Amount.Size()
	n += 1 + l + sovPurchase(uint64(l))
	l = m.Claimed.Size()
	n += 1 + l + sovPurchase(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StartTime)
	n += 1 + l + sovPurchase(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.EndTime)
	n += 1 + l + sovPurchase(uint64(l))
	return n
}

func (m *UserPurchase) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Buyer)
	if l > 0 {
		n += 1 + l + sovPurchase(uint64(l))
	}
	l = m.Purchase.Size()
	n += 1 + l + sovPurchase(uint64(l))
	return n
}

func sovPurchase(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPurchase(x uint64) (n int) {
	return sovPurchase(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Purchase) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPurchase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Purchase: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Purchase: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Claimed", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Claimed.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.StartTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.EndTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPurchase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPurchase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserPurchase) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPurchase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserPurchase: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserPurchase: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buyer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buyer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchase", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPurchase
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPurchase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Purchase.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPurchase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPurchase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPurchase(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPurchase
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPurchase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPurchase
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPurchase
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPurchase
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPurchase        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPurchase          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPurchase = fmt.Errorf("proto: unexpected end of group")
)
